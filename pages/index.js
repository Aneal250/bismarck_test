import Head from 'next/head'
import { useState, useEffect } from 'react';
import axios from 'axios';
import StudentsList from '../components/StudentsList';

export default function Home() {

	const [ allStudentsData, setAllStundentsData] = useState([])

	const [ age, setAge ] = useState('')
	const [ fetchedAge, setFetchedAge ] = useState([])

	const [ state, setState ] = useState('')
	const [fetchSate, setFetchedState] = useState([]);

	const [ level, setLevel ] = useState('')
	const [ fetchLevel, setFetchedLevel ] = useState([])

	const [ sex, setSex ] = useState('')


	const FetchAllStudentsData = async () => {
		try {
			const { data } = await axios.get("https://testapiomniswift.herokuapp.com/api/viewAllData");
			console.log('checkout students', data.data.students);
			setAllStundentsData(data.data.students);

		} catch (error) {
			console.log(error);
		}
	};

	const FetchAge =  async () => {

		try {

			const { data } = await axios.get("https://testapiomniswift.herokuapp.com/api/viewAllAges")		
			console.log(data.data);
			setFetchedAge(data.data)
			
		}catch(error){
			console.log(error);
		}


	}

		const FetchStateHandeler = async () => {
			try {
				const { data } = await axios.get("https://testapiomniswift.herokuapp.com/api/viewAllStates");
				console.log(data.data);
				setFetchedState(data.data);
			} catch (error) {
				console.log(error);
			}
		};


			const FetchLevelHandeler = async () => {

				try {
					const { data } = await axios.get(
						"https://testapiomniswift.herokuapp.com/api/viewAllLevels"
					);
					console.log(data.data);
					setFetchedLevel(data.data);

				} catch (error) {

					console.log(error);
				}
			};



	// const HandleAge = (e) => {
	// 	setAge(e.target.value)
	// 	console(age)
	// }

	useEffect(() => {

		FetchAge()
		FetchStateHandeler()
		FetchLevelHandeler()
		FetchAllStudentsData()
		

	},[setAge])


  return (
		<div>
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<main className="mx-4 my-4 ">
				<div className="font-bold text-4xl mx-12">
					<h1>Student Data Table</h1>
				</div>

				<div className="bg-white my-4 px-12 py-4 mx-12">
					<h2 className="mb-12">Filter Student Table By:</h2>
					<div className="grid grid-cols-3 gap-8 ">
						<div>
							<div>
								<span className="bg-white ml-8 z-10 -mt-8 block">Age</span>
							</div>

							{/* <option value="DEFAULT">Select Age</option>
								<option value="products">Product</option>
								<option value="services">Services</option> */}
							<select
								value={age}
								onChange={(e) => setAge(e.target.value)}
								className="input-select"
							>
								{fetchedAge.map((option) => (
									<option value={option.age} key={option.id}>
										{option.age}
									</option>
								))}
							</select>
						</div>

						<div>
							<div>
								<span className="bg-white ml-8 z-10 -mt-8 block">State</span>
							</div>
							<select
								value={state}
								onChange={(e) => setState(e.target.value)}
								className="input-select"
							>
								{fetchSate.map((option) => (
									<option value={option.name} key={option.id}>
										{option.name}
									</option>
								))}
							</select>
						</div>

						<div>
							{/* <div>
								<span className="bg-white ml-8 z-10 -mt-8 block">Age</span>
							</div> */}
							<select
								value={level}
								onChange={(e) => setLevel(e.target.value)}
								className="input-select"
							>
								{fetchLevel.map((option) => (
									<option value={option.level} key={option.id}>
										{option.level}
									</option>
								))}
							</select>
						</div>
					</div>

					<div className="grid grid-cols-3 gap-8 my-12">
						<div>
							<select
								value={sex}
								onChange={(e) => setSex(e.target.value)}
								className="input-select"
							>
								<option value="male">male</option>
								<option value="female">female</option>
							</select>
						</div>

						<div className="">
							<button className="py-2 text-lg px-32 bg-green-600 rounded text-white w-full">
								search
							</button>
						</div>
					</div>
				</div>

				<div className="bg-white my-8 px-12 py-4 mx-12 overflow-y-scroll scrollbar h-[300px] ">
					<div className="grid grid-cols-8 gap-4 mt-8 mb-4 bg-gray-200 py-2 px-4 font-bold">
						<div>
							<p>S/N</p>
						</div>
						<div>
							<p>Surname</p>
						</div>
						<div>
							<p>First Name</p>
						</div>
						<div>
							<p>Age</p>
						</div>
						<div>
							<p>Gender</p>
						</div>
						<div>
							<p>Level</p>
						</div>
						<div>
							<p>State</p>
						</div>
						<div>
							<p>Action</p>
						</div>
					</div>

					{
					allStudentsData.map((student) => (
						<StudentsList student={student} key={student.id} />
					))
		
					}
				</div>
			</main>
		</div>
	);
}
