import Head from 'next/head'
import { useState, useEffect } from 'react';
import axios from 'axios';
import StudentsList from '../components/StudentsList';
import { errorToast } from '../components/Toast/Toast';

export default function Home() {

	const [ search, setSearch ] = useState(false)
	const [ notfound, setFound ] = useState(false)

	const [ filteredData, setFilteredData ] = useState([])

	const [ allStudentsData, setAllStundentsData] = useState([])

	const [ age, setAge ] = useState('')
	const [ fetchedAge, setFetchedAge ] = useState([])

	const [ state, setState ] = useState('')
	const [fetchSate, setFetchedState] = useState([]);

	const [ level, setLevel ] = useState('')
	const [ fetchLevel, setFetchedLevel ] = useState([])

	const [ sex, setSex ] = useState('')


	const HandleFilter = async () => {

		setSearch(true);

		try{
			
				let fd = new FormData();
				fd.append('level', level)
				fd.append('age', age)
				fd.append('state', state)
				fd.append('gender', sex)
		
				const { data } = await axios({
						method: "post",
						url: "https://testapiomniswift.herokuapp.com/api/filterData",
						data: fd,
			})
		
			console.log(data.data.students);

			console.log('students check', data.data);

			

			setFilteredData(data.data.students)

		}catch(error){

			console.log(error)
			errorToast("Could not Find any Match from the Database")
		}

	}

	const FetchAllStudentsData = async () => {
		try {
			const { data } = await axios.get("https://testapiomniswift.herokuapp.com/api/viewAllData");
			console.log('checkout students', data.data.students);
			setAllStundentsData(data.data.students);

		} catch (error) {
			console.log(error);
		}
	};

	const FetchAge =  async () => {

		try {

			const { data } = await axios.get("https://testapiomniswift.herokuapp.com/api/viewAllAges")		
			
			setFetchedAge(data.data)
			
		}catch(error){
			console.log(error);
		}


	}

		const FetchStateHandeler = async () => {
			try {
				const { data } = await axios.get("https://testapiomniswift.herokuapp.com/api/viewAllStates");

				setFetchedState(data.data);

			} catch (error) {
				console.log(error);
			}
		};


			const FetchLevelHandeler = async () => {

				try {
					const { data } = await axios.get(
						"https://testapiomniswift.herokuapp.com/api/viewAllLevels"
					);
					
					
					setFetchedLevel(data.data);

				} catch (error) {

					console.log(error);
				}
			};



	// const HandleAge = (e) => {
	// 	setAge(e.target.value)
	// 	console(age)
	// }

	useEffect(() => {

		FetchAge()
		FetchStateHandeler()
		FetchLevelHandeler()
		FetchAllStudentsData()
		

	},[setAge])


  return (
		<div>
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<main className="mx-4 my-2 ">
				<div className="font-bold text-3xl mx-12">
					<h1>Student Data Table</h1>
				</div>

				<div className="bg-white my-4 px-12 py-4 mx-12">
					<h2 className="mb-8">Filter Student Table By:</h2>
					<div className="grid grid-cols-3 gap-8 ">
						<div>
							<select
								value={age}
								onChange={(e) => setAge(e.target.value)}
								className="input-select"
							>
								<option value="DEFAULT"> Select Age </option>
								{fetchedAge.map((option) => (
									<option value={option.age} key={option.id}>
										{option.age}
									</option>
								))}
							</select>
						</div>

						<div>
							<select
								value={state}
								onChange={(e) => setState(e.target.value)}
								className="input-select"
							>
								<option value="DEFAULT"> Select State </option>
								{fetchSate.map((option) => (
									<option value={option.name} key={option.id}>
										{option.name}
									</option>
								))}
							</select>
						</div>

						<div>
							<select
								value={level}
								onChange={(e) => setLevel(e.target.value)}
								className="input-select"
							>
								<option value="DEFAULT"> Select Level </option>
								{fetchLevel.map((option) => (
									<option value={option.level} key={option.id}>
										{option.level}
									</option>
								))}
							</select>
						</div>
					</div>

					<div className="grid grid-cols-3 gap-8 my-8">
						<div>
							<select
								value={sex}
								onChange={(e) => setSex(e.target.value)}
								className="input-select"
							>
								<option value="DEFAULT"> Select Age </option>
								<option value="male">male</option>
								<option value="female">female</option>
							</select>
						</div>

						<div className="">
							<button
								className="py-2 text-lg px-32 bg-green-600 rounded text-white w-full"
								onClick={HandleFilter}
							>
								search
							</button>
						</div>
					</div>
				</div>

				<div className="bg-white my-8 px-12 py-4 mx-12 overflow-y-scroll scrollbar h-[300px] ">
					<div className="grid grid-cols-8 gap-4 mt-8 mb-4 bg-gray-200 py-2 px-4 font-bold">
						<div>
							<p>S/N</p>
						</div>
						<div>
							<p>Surname</p>
						</div>
						<div>
							<p>First Name</p>
						</div>
						<div>
							<p>Age</p>
						</div>
						<div>
							<p>Gender</p>
						</div>
						<div>
							<p>Level</p>
						</div>
						<div>
							<p>State</p>
						</div>
						<div>
							<p>Action</p>
						</div>
					</div>

					{search
						? filteredData.map((student) =>
								filteredData ? (
									<StudentsList student={student} key={student.id} />
								) : (
									<div className="grid grid-cols-1 gap-4 my-2 border-b-2 py-2 px-4 ">
										<p className="text-center font-bold text-4xl text-red-500">
											No Search Found
										</p>
									</div>
								)
						  )
						: allStudentsData.map((student) => (
								<StudentsList student={student} key={student.id} />
						  ))}
				</div>
			</main>
		</div>
	);
}
